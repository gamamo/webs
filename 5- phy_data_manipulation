library(TreeTools)
library(ape)
library(picante)
library(dplyr)

#library(BiocManager)
#BiocManager::install("ggtree")
#library("ggtree")

getwd()
#setwd("C:/Users/gabri/Dropbox/postdocINECOL/bird phylogeny/tree-pruner-301f6553-503b-4c81-b602-f835182026b8_myspeciesEricson")
setwd("C:/Users/gabri/Dropbox/postdocINECOL/bird phylogeny")

dir()

phy=read.tree("AllBirdsHackett1.tre")
phy

Ntip(phy[[2]])

#gerando um objeto pra testar os pglmm
tree= phy[[1]]
tree$tip.label = gsub("_"," ",tree$tip.label)


# calcular o Phylogenetic metrics para as varias arvores

EDlist = list()
for (i in 1:100){
  print(i)
  ED_ec = evol.distinct(phy[[i]], type = c("equal.splits"),
                        scale = FALSE,
                        use.branch.lengths = TRUE)
  colnames(ED_ec)[2] ="ED"
  #colnames(ED_fp)[2] ="FP"
  #ED=left_join(ED_ec,ED_fp,by="Species")
  ED=ED_ec
  ED$DR = 1/ED$ED
  EDlist[[i]] = ED
}

  ED$Species = gsub("_"," ",ED$Species)
  colnames(ED)[1] = "Scientific"

  
ED_mean = as.data.frame(matrix(NA, nrow=length(unique(EDlist[[1]][[1]])),ncol = 3))
colnames(ED_mean)= c("Scientific", "ES", "DR")
ED_mean$Scientific = unique(EDlist[[1]][[1]])
es = c()
dr = c()

  
    for (j in unique(EDlist[[1]][[1]])){
        for (i in 1:length(EDlist)){
     es[i]=EDlist[[i]][which(EDlist[[i]][1]==j),2]
     dr[i]=EDlist[[i]][which(EDlist[[i]][1]==j),3]
     
     ED_mean[which(ED_mean$Scientific==j),"ES"] = mean(es)
     #ED_mean[which(ED_mean$Scientific==j),"FP"] = mean(fp)
     ED_mean[which(ED_mean$Scientific==j),"DR"] = mean(dr)
      }
    }

ED_mean$Scientific = gsub("_"," ",ED_mean$Scientific)
colnames(ED_mean)[2] = "ED"

setwd("C:/Users/gabri/Dropbox/postdocINECOL/dadosCompilados/workingfolder_GM")
write.csv(ED, "ED.csv")

write.csv(ED_mean, "ED100.csv")



# matching datasets
data = read.csv(file="birdtraits_spmetrics_v29_mar_2022.csv")
ED = read.csv(file="ED100.csv")
#ED = read.csv(file="ED.csv")
ED = ED[,-1]


data = left_join(data,ED, by="Scientific")

head(data)
write.csv(data, "birdtraits_spmetrics_phy_v7_abr_2022.csv")


